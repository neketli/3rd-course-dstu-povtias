# Должен быть алфавит, порядок имеет значение, не должно быть цифр и символов (буквы либо англ либо рус)# По слову вывести его номер# По номеру вывести словоdef init_alphabet():    char = '0'    alphabet = []    lang = ""    while char:        char = str(input("Введите букву алфавита или enter, чтобы завершить\n"))        if len(char) > 1 or not char.isalpha():            if not char:                break            print("Введите одну БУКВУ!")            continue        if 97 <= ord(char.lower()) <= 122 and lang == "en" or lang == "":            if not lang:                lang = "en"            alphabet.append(char.lower())        elif 1072 <= ord(char.lower()) <= 1103 and lang == "ru" or lang == "":            if not lang:                lang = "ru"            alphabet.append(char.lower())        else:            continue    return alphabet# n**(k-(1 to k) * i(1 to k)# n = len(alphabet) ; k = len(word) ; i - номер буквы в алфавите.def lexicographic_numbering_to_num(alphabet, word):    current_word = list(word)    n = len(alphabet)    k = len(current_word)    def find_number(i):        if i == k - 1:            print(alphabet.index(current_word[i]) + 1, end='')            return alphabet.index(current_word[i]) + 1        print(f"{n ** (k - (i + 1))} * {alphabet.index(current_word[i]) + 1} + ", end='')        return (n ** (k - (i + 1)) * (alphabet.index(current_word[i]) + 1)) + find_number(i + 1)    return " = " + str(find_number(0))def lexicographic_numbering_to_word(alphabet, number):    n = len(alphabet)    code = []    def find_word(acc):        if acc // n == 0:            return acc % n        if acc % n == 0:            print(f"{(acc // n - 1)} * {n} + {n}", end=" => ")            code.append(n)            return find_word((acc // n - 1))        print(f"{acc // n} * {n} + {acc % n}", end=" => ")        code.append(acc % n)        return find_word(acc // n)    find_word(number)    word = ""    code.reverse()    for el in code:        word += alphabet[el - 1]    return wordalph = init_alphabet()print(lexicographic_numbering_to_num(alph, "abccb"))print(lexicographic_numbering_to_word(["a", "b", "c"], 321))if __name__ == '__main__':    choice = "1"    while choice:        print("Здравствуйте, выберите ")